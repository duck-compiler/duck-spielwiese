use go "time";

fn sleep(d: std::time::Duration) {
    match (d) {
        { millis: Int } millis -> go { time.Sleep(time.Duration(millis.Getmillis().as_dgo_int()) * time.Millisecond) },
        { seconds: Int } seconds -> go { time.Sleep(time.Duration(seconds.Getseconds().as_dgo_int()) * time.Second) },
        { minutes: Int } minutes -> go { time.Sleep(time.Duration(minutes.Getminutes().as_dgo_int()) * time.Minute) },
        { hours: Int } hours -> go { time.Sleep(time.Duration(hours.Gethours().as_dgo_int()) * time.Hour) },
        { days: Int } days -> go { time.Sleep(time.Duration(days.Getdays().as_dgo_int()) * 24 * time.Hour) },
    }
}
